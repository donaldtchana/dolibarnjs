<?php
/* Copyright (C) 2007-2017 Laurent Destailleur  <eldy@users.sourceforge.net>
 * Copyright (C) 2022 SuperAdmin <marcello.gribaudo@opigi.com> *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/**
 *  \file       invoice_tab.php
 *  \ingroup    manufacturingproduction
 *  \brief      Manage costcenter in customer invoice
 */

// Load Dolibarr environment
$res = 0;
// Try main.inc.php into web root known defined into CONTEXT_DOCUMENT_ROOT (not always defined)
if (!$res && !empty($_SERVER["CONTEXT_DOCUMENT_ROOT"])) {
	$res = @include $_SERVER["CONTEXT_DOCUMENT_ROOT"]."/main.inc.php";
}
// Try main.inc.php into web root detected using web root calculated from SCRIPT_FILENAME
$tmp = empty($_SERVER['SCRIPT_FILENAME']) ? '' : $_SERVER['SCRIPT_FILENAME']; $tmp2 = realpath(__FILE__); $i = strlen($tmp) - 1; $j = strlen($tmp2) - 1;
while ($i > 0 && $j > 0 && isset($tmp[$i]) && isset($tmp2[$j]) && $tmp[$i] == $tmp2[$j]) {
	$i--; $j--;
}
if (!$res && $i > 0 && file_exists(substr($tmp, 0, ($i + 1))."/main.inc.php")) {
	$res = @include substr($tmp, 0, ($i + 1))."/main.inc.php";
}
if (!$res && $i > 0 && file_exists(dirname(substr($tmp, 0, ($i + 1)))."/main.inc.php")) {
	$res = @include dirname(substr($tmp, 0, ($i + 1)))."/main.inc.php";
}
// Try main.inc.php using relative path
if (!$res && file_exists("../main.inc.php")) {
	$res = @include "../main.inc.php";
}
if (!$res && file_exists("../../main.inc.php")) {
	$res = @include "../../main.inc.php";
}
if (!$res && file_exists("../../../main.inc.php")) {
	$res = @include "../../../main.inc.php";
}
if (!$res) {
	die("Include of main fails");
}

require_once DOL_DOCUMENT_ROOT.'/projet/class/project.class.php';
require_once DOL_DOCUMENT_ROOT.'/core/lib/project.lib.php';
require_once dol_buildpath('/manufacturingproduction/class/journal.class.php');
require_once dol_buildpath('/manufacturingproduction/class/costcenter.class.php');

// Load translation files required by the page
$langs->loadLangs(array("manufacturingproduction@manufacturingproduction", "projects", "companies"));

// Get parameters
$id = GETPOST('id', 'int');
$ref        = GETPOST('ref', 'alpha');
$action = GETPOST('action', 'aZ09');
$cancel     = GETPOST('cancel', 'aZ09');
$backtopage = GETPOST('backtopage', 'alpha');
$massaction = GETPOST('massaction', 'alpha'); // The bulk action (combo box choice into lists)
$show_files = GETPOST('show_files', 'int'); // Show files area generated by bulk actions ?
$confirm    = GETPOST('confirm', 'alpha'); // Result of a confirmation
$cancel     = GETPOST('cancel', 'alpha'); // We click on a Cancel button
$toselect   = GETPOST('toselect', 'array'); // Array of ids of elements selected into a list
$contextpage = GETPOST('contextpage', 'aZ') ? GETPOST('contextpage', 'aZ') : str_replace('_', '', basename(dirname(__FILE__)).basename(__FILE__, '.php')); // To manage different context of search
$optioncss  = GETPOST('optioncss', 'aZ'); // Option for the css output (always '' except when 'print')

// Load variable for pagination
$limit = GETPOST('limit', 'int') ? GETPOST('limit', 'int') : $conf->liste_limit;
$sortfield = GETPOST('sortfield', 'aZ09comma');
$sortorder = GETPOST('sortorder', 'aZ09comma');
$page = GETPOSTISSET('pageplusone') ? (GETPOST('pageplusone') - 1) : GETPOST("page", 'int');
if (empty($page) || $page < 0 || GETPOST('button_search', 'alpha') || GETPOST('button_removefilter', 'alpha')) {
    // If $page is not defined, or '' or -1 or if we click on clear filters
    $page = 0;
}
$offset = $limit * $page;

// Initialize technical objects
$object = new Project($db);
$journalstatic = new Journal($db);

$journalstatic->fields['fk_project']['enabled'] = false;
$journalstatic->fields['fk_project']['visible'] = false;

// Load object
include DOL_DOCUMENT_ROOT.'/core/actions_fetchobject.inc.php'; // Must be include, not include_once  // Must be include, not include_once. Include fetch and fetch_thirdparty but not fetch_optionals
if ($id > 0 || !empty($ref)) {
    $upload_dir = $conf->mrp->multidir_output[$object->entity]."/".$object->id;
}

// Security check - Protection if external user
$result = restrictedArea($user, 'facture', $object->id);

$permissiontoadd = $user->rights->manufacturingproduction->all->write; 
$permissiontodelete = $user->rights->manufacturingproduction->all->delete;

    // Initialize array of search criterias
    $search_all = GETPOST('search_all', 'alphanohtml');
    $search = array();
    foreach ($journalstatic->fields as $key => $val) {
        if (GETPOST('search_'.$key, 'alpha') !== '') {
            $search[$key] = GETPOST('search_'.$key, 'alpha');
        }
        if (preg_match('/^(date|timestamp|datetime)/', $val['type'])) {
            $search[$key.'_dtstart'] = dol_mktime(0, 0, 0, GETPOST('search_'.$key.'_dtstartmonth', 'int'), GETPOST('search_'.$key.'_dtstartday', 'int'), GETPOST('search_'.$key.'_dtstartyear', 'int'));
            $search[$key.'_dtend'] = dol_mktime(23, 59, 59, GETPOST('search_'.$key.'_dtendmonth', 'int'), GETPOST('search_'.$key.'_dtendday', 'int'), GETPOST('search_'.$key.'_dtendyear', 'int'));
        }
    }


/*
 * Actions
 */

include DOL_DOCUMENT_ROOT.'/core/actions_changeselectedfields.inc.php';

// Purge search criteria
if (GETPOST('button_removefilter_x', 'alpha') || GETPOST('button_removefilter.x', 'alpha') || GETPOST('button_removefilter', 'alpha')) { // All tests are required to be compatible with all browsers
    foreach ($journalstatic->fields as $key => $val) {
        $search[$key] = '';
        if (preg_match('/^(date|timestamp|datetime)/', $val['type'])) {
            $search[$key.'_dtstart'] = '';
            $search[$key.'_dtend'] = '';
        }
    }
    $toselect = array();
    $search_array_options = array();
}
if (GETPOST('button_removefilter_x', 'alpha') || GETPOST('button_removefilter.x', 'alpha') || GETPOST('button_removefilter', 'alpha')
   || GETPOST('button_search_x', 'alpha') || GETPOST('button_search.x', 'alpha') || GETPOST('button_search', 'alpha')) {
    $massaction = ''; // Protection to avoid mass action if we force a new search during a mass action confirmation
}

// Mass actions
$objectclass = 'Journal';
$objectlabel = 'Journal';
$uploaddir = $conf->manufacturingproduction->dir_output;
include DOL_DOCUMENT_ROOT.'/core/actions_massactions.inc.php';
    
/*
 * View
 */

$form = new Form($db);

//$help_url='EN:Customers_Orders|FR:Commandes_Clients|ES:Pedidos de clientes';
$help_url = '';
$title = $title = $langs->trans("Project").' - '.$object->ref.(!empty($object->thirdparty->name) ? ' - '.$object->thirdparty->name : '').(!empty($object->title) ? ' - '.$object->title : '')." - ".$langs->trans('CostCenters');
llxHeader('', $title, $help_url);

if ($id > 0 || !empty($ref)) {

    $head = project_prepare_head($object);

    //print dol_get_fiche_head($head, 'costcenter', $langs->trans("ManufacturingOrder"), -1, $object->picto);
    print dol_get_fiche_head($head, 'costcenter', $langs->trans("Project"), 1, ($object->public ? 'projectpub' : 'project'));

    $linkback = '<a href="'.DOL_URL_ROOT.'/projet/list.php?restore_lastsearch_values=1">'.$langs->trans("BackToList").'</a>';

    $morehtmlref = '<div class="refidno">';
    // Title
    $morehtmlref .= dol_escape_htmltag($object->title);
    // Thirdparty
    $morehtmlref .= '<br>'.$langs->trans('ThirdParty').' : ';
    if (!empty($object->thirdparty->id) && $object->thirdparty->id > 0) {
            $morehtmlref .= $object->thirdparty->getNomUrl(1, 'project');
    }
    $morehtmlref .= '</div>';

    // Define a complementary filter for search of next/prev ref.
    if (empty($user->rights->projet->all->lire)) {
            $objectsListId = $object->getProjectsAuthorizedForUser($user, 0, 0);
            $object->next_prev_filter = " rowid IN (".$db->sanitize(count($objectsListId) ? join(',', array_keys($objectsListId)) : '0').")";
    }

    dol_banner_tab($object, 'id', $linkback, 1, 'rowid', 'id', $morehtmlref);


    // List of fields to search into when doing a "search in all"
    $fieldstosearchall = array();
    foreach ($journalstatic->fields as $key => $val) {
        if (!empty($val['searchall'])) {
            $fieldstosearchall['t.'.$key] = $val['label'];
        }
    }

    // Definition of array of fields for columns
    $arrayfields = array();
    foreach ($journalstatic->fields as $key => $val) {
        // If $val['visible']==0, then we never show the field
    if (!empty($val['visible'])) {
        $visible = (int) dol_eval($val['visible'], 1);
        $arrayfields['t.'.$key] = array(
                     'label'=>$val['label'],
                     'checked'=>(($visible < 0) ? 0 : 1),
                     'enabled'=>(abs($visible) != 3 && dol_eval($val['enabled'], 1)),
                     'position'=>$val['position'],
                     'help'=> isset($val['help']) ? $val['help'] : '',
                     'type'=> $val['type'],
                     'isameasure'=> $val['isameasure'],);
        }
    }

    $journalstatic->fields = dol_sort_array($journalstatic->fields, 'position');
    //$arrayfields['anotherfield'] = array('type'=>'integer', 'label'=>'AnotherField', 'checked'=>1, 'enabled'=>1, 'position'=>90, 'csslist'=>'right');
    $arrayfields = dol_sort_array($arrayfields, 'position');
    
    // Build and execute select
    // --------------------------------------------------------------------
    $sql = 'SELECT ';
    $sql .= $journalstatic->getFieldList('t');
    $sql .= " FROM ".MAIN_DB_PREFIX.$journalstatic->table_element." as t";
    if ($journalstatic->ismultientitymanaged == 1) {
        $sql .= " WHERE fk_project=".$id." AND t.entity IN (".getEntity($journalstatic->element).")";
    } else {
        $sql .= " WHERE fk_project=".$id;
    }
    foreach ($search as $key => $val) {
        if (array_key_exists($key, $journalstatic->fields)) {
            if ($key == 'status' && $search[$key] == -1) {
                continue;
            }
            $mode_search = (($journalstatic->isInt($journalstatic->fields[$key]) || $journalstatic->isFloat($journalstatic->fields[$key])) ? 1 : 0);
            if ((strpos($journalstatic->fields[$key]['type'], 'integer:') === 0) || (strpos($journalstatic->fields[$key]['type'], 'sellist:') === 0) || !empty($journalstatic->fields[$key]['arrayofkeyval'])) {
                if ($search[$key] == '-1' || ($search[$key] === '0' && (empty($journalstatic->fields[$key]['arrayofkeyval']) || !array_key_exists('0', $journalstatic->fields[$key]['arrayofkeyval'])))) {
                    $search[$key] = '';
                }
                $mode_search = 2;
            }
            if ($search[$key] != '') {
                $sql .= natural_search("t.".$db->escape($key), $search[$key], (($key == 'status') ? 2 : $mode_search));
            }
        } else {
            if (preg_match('/(_dtstart|_dtend)$/', $key) && $search[$key] != '') {
                $columnName = preg_replace('/(_dtstart|_dtend)$/', '', $key);
                if (preg_match('/^(date|timestamp|datetime)/', $journalstatic->fields[$columnName]['type'])) {
                    if (preg_match('/_dtstart$/', $key)) {
                        $sql .= " AND t.".$db->escape($columnName)." >= '".$db->idate($search[$key])."'";
                    }
                    if (preg_match('/_dtend$/', $key)) {
                        $sql .= " AND t.".$db->escape($columnName)." <= '".$db->idate($search[$key])."'";
                    }
                }
            }
        }
    }
    if ($search_all) {
        $sql .= natural_search(array_keys($fieldstosearchall), $search_all);
    }

    // Count total nb of records
    $nbtotalofrecords = '';
    if (empty($conf->global->MAIN_DISABLE_FULL_SCANLIST)) {
        /* The fast and low memory method to get and count full list converts the sql into a sql count */
        $sqlforcount = preg_replace('/^SELECT[a-zA-Z0-9\._\s\(\),=<>\:\-\']+\sFROM/', 'SELECT COUNT(*) as nbtotalofrecords FROM', $sql);
        $resql = $db->query($sqlforcount);
        if ($resql) {
            $objforcount = $db->fetch_object($resql);
            $nbtotalofrecords = $objforcount->nbtotalofrecords;
        } else {
            dol_print_error($db);
        }

        if (($page * $limit) > $nbtotalofrecords) {	// if total of record found is smaller than page * limit, goto and load page 0
            $page = 0;
            $offset = 0;
        }
        $db->free($resql);
    }

    // Complete request and execute it with limit
    $sql .= $db->order($sortfield, $sortorder);
    if ($limit) {
        $sql .= $db->plimit($limit + 1, $offset);
    }
    

    $resql = $db->query($sql);
    if (!$resql) {
        dol_print_error($db);
        exit;
    }

    $num = $db->num_rows($resql);

    $arrayofselected = is_array($toselect) ? $toselect : array();

    $param = '&id='.$id;
    if (!empty($contextpage) && $contextpage != $_SERVER["PHP_SELF"]) {
        $param .= '&contextpage='.urlencode($contextpage);
    }
    if ($limit > 0 && $limit != $conf->liste_limit) {
        $param .= '&limit='.urlencode($limit);
    }
    foreach ($search as $key => $val) {
        if (is_array($search[$key])) {
            foreach ($search[$key] as $skey) {
                if ($skey != '') {
                    $param .= '&search_'.$key.'[]='.urlencode($skey);
                }
            }
        } elseif (preg_match('/(_dtstart|_dtend)$/', $key) && !empty($val)) {
            $param .= '&search_'.$key.'month='.((int) GETPOST('search_'.$key.'month', 'int'));
            $param .= '&search_'.$key.'day='.((int) GETPOST('search_'.$key.'day', 'int'));
            $param .= '&search_'.$key.'year='.((int) GETPOST('search_'.$key.'year', 'int'));
        } elseif ($search[$key] != '') {
            $param .= '&search_'.$key.'='.urlencode($search[$key]);
        }
    }
    if ($optioncss != '') {
        $param .= '&optioncss='.urlencode($optioncss);
    }
    
    
    // List of mass actions available
    $arrayofmassactions = array(
            //'validate'=>img_picto('', 'check', 'class="pictofixedwidth"').$langs->trans("Validate"),
            //'generate_doc'=>img_picto('', 'pdf', 'class="pictofixedwidth"').$langs->trans("ReGeneratePDF"),
            //'builddoc'=>img_picto('', 'pdf', 'class="pictofixedwidth"').$langs->trans("PDFMerge"),
            //'presend'=>img_picto('', 'email', 'class="pictofixedwidth"').$langs->trans("SendByMail"),
    );
    if (!empty($permissiontodelete)) {
        $arrayofmassactions['predelete'] = img_picto('', 'delete', 'class="pictofixedwidth"').$langs->trans("Delete");
    }
    if (GETPOST('nomassaction', 'int') || in_array($massaction, array('presend', 'predelete'))) {
        $arrayofmassactions = array();
    }
    $massactionbutton = $form->selectMassAction('', $arrayofmassactions);

    print '<form method="POST" id="searchFormList" action="'.$_SERVER["PHP_SELF"].'">'."\n";
    if ($optioncss != '') {
        print '<input type="hidden" name="optioncss" value="'.$optioncss.'">';
    }
    print '<input type="hidden" name="token" value="'.newToken().'">';
    print '<input type="hidden" name="formfilteraction" id="formfilteraction" value="list">';
    print '<input type="hidden" name="action" value="list">';
    print '<input type="hidden" name="sortfield" value="'.$sortfield.'">';
    print '<input type="hidden" name="sortorder" value="'.$sortorder.'">';
    print '<input type="hidden" name="page" value="'.$page.'">';
    print '<input type="hidden" name="contextpage" value="'.$contextpage.'">';
    print '<input type="hidden" name="id" value="'.$id.'">';

    $newcardbutton = '';
    $newcardbutton .= dolGetButtonTitle($langs->trans('New'), '', 'fa fa-plus-circle', dol_buildpath('/manufacturingproduction/journal_card.php', 1).'?action=create&fk_project='.$id.'&backtopage='.urlencode($_SERVER['PHP_SELF'].'?id='.$id), '', $permissiontoadd);

    print_barre_liste('', $page, $_SERVER["PHP_SELF"], $param, $sortfield, $sortorder, $massactionbutton, $num, $nbtotalofrecords, 'object_'.$journalstatic->picto, 0, $newcardbutton, '', $limit, 0, 0, 1);

    $objecttmp = new Journal($db);
    include DOL_DOCUMENT_ROOT.'/core/tpl/massactions_pre.tpl.php';

    if ($search_all) {
        $setupstring = '';
        foreach ($fieldstosearchall as $key => $val) {
            $fieldstosearchall[$key] = $langs->trans($val);
            $setupstring .= $key."=".$val.";";
        }
        print '<!-- Search done like if PRODUCT_QUICKSEARCH_ON_FIELDS = '.$setupstring.' -->'."\n";
        print '<div class="divsearchfieldfilter">'.$langs->trans("FilterOnInto", $search_all).join(', ', $fieldstosearchall).'</div>'."\n";
    }

    $moreforfilter = '';

    $varpage = empty($contextpage) ? $_SERVER["PHP_SELF"] : $contextpage;
    $selectedfields = $form->multiSelectArrayWithCheckbox('selectedfields', $arrayfields, $varpage, getDolGlobalString('MAIN_CHECKBOX_LEFT_COLUMN', '')); // This also change content of $arrayfields
    $selectedfields .= (count($arrayofmassactions) ? $form->showCheckAddButtons('checkforselect', 1) : '');

    print '<div class="div-table-responsive">'; // You can use div-table-responsive-no-min if you dont need reserved height for your table
    print '<table class="tagtable nobottomiftotal liste'.($moreforfilter ? " listwithfilterbefore" : "").'">'."\n";


    // Fields title search
    // --------------------------------------------------------------------
    print '<tr class="liste_titre">';
    // Action column
    if (!empty($conf->global->MAIN_CHECKBOX_LEFT_COLUMN)) {
        print '<td class="liste_titre maxwidthsearch">';
        $searchpicto = $form->showFilterButtons('left');
        print $searchpicto;
        print '</td>';
    }
    foreach ($journalstatic->fields as $key => $val) {
        $searchkey = empty($search[$key]) ? '' : $search[$key];
        $cssforfield = (empty($val['csslist']) ? (empty($val['css']) ? '' : $val['css']) : $val['csslist']);
        if ($key == 'status') {
            $cssforfield .= ($cssforfield ? ' ' : '').'center';
        } elseif (in_array($val['type'], array('date', 'datetime', 'timestamp'))) {
            $cssforfield .= ($cssforfield ? ' ' : '').'center';
        } elseif (in_array($val['type'], array('timestamp'))) {
            $cssforfield .= ($cssforfield ? ' ' : '').'nowrap';
        } elseif (in_array($val['type'], array('double(24,8)', 'double(6,3)', 'integer', 'real', 'price')) && $key != 'rowid' && $val['label'] != 'TechnicalID' && empty($val['arrayofkeyval'])) {
            $cssforfield .= ($cssforfield ? ' ' : '').'right';
        }
        if (!empty($arrayfields['t.'.$key]['checked'])) {
            print '<td class="liste_titre'.($cssforfield ? ' '.$cssforfield : '').'">';
            if (!empty($val['arrayofkeyval']) && is_array($val['arrayofkeyval'])) {
                print $form->selectarray('search_'.$key, $val['arrayofkeyval'], (isset($search[$key]) ? $search[$key] : ''), $val['notnull'], 0, 0, '', 1, 0, 0, '', 'maxwidth100', 1);
            } elseif ((strpos($val['type'], 'integer:') === 0) || (strpos($val['type'], 'sellist:') === 0)) {
                print $journalstatic->showInputField($val, $key, (isset($search[$key]) ? $search[$key] : ''), '', '', 'search_', $cssforfield.' maxwidth250', 1);
            } elseif (preg_match('/^(date|timestamp|datetime)/', $val['type'])) {
                print '<div class="nowrap">';
                print $form->selectDate($search[$key.'_dtstart'] ? $search[$key.'_dtstart'] : '', "search_".$key."_dtstart", 0, 0, 1, '', 1, 0, 0, '', '', '', '', 1, '', $langs->trans('From'));
                print '</div>';
                print '<div class="nowrap">';
                print $form->selectDate($search[$key.'_dtend'] ? $search[$key.'_dtend'] : '', "search_".$key."_dtend", 0, 0, 1, '', 1, 0, 0, '', '', '', '', 1, '', $langs->trans('to'));
                print '</div>';
            } elseif ($key == 'lang') {
                require_once DOL_DOCUMENT_ROOT.'/core/class/html.formadmin.class.php';
                $formadmin = new FormAdmin($db);
                print $formadmin->select_language($search[$key], 'search_lang', 0, null, 1, 0, 0, 'minwidth150 maxwidth200', 2);
            } else {
                print '<input type="text" class="flat maxwidth75" name="search_'.$key.'" value="'.dol_escape_htmltag(isset($search[$key]) ? $search[$key] : '').'">';
            }
                print '</td>';
        }
    }
    
    // Action column
    if (empty($conf->global->MAIN_CHECKBOX_LEFT_COLUMN)) {
        print '<td class="liste_titre maxwidthsearch">';
        $searchpicto = $form->showFilterButtons();
        print $searchpicto;
        print '</td>';
    }
    print '</tr>'."\n";

    $fieldcount = 0;

    // Fields title label
    // --------------------------------------------------------------------
    print '<tr class="liste_titre">';
    if (!empty($conf->global->MAIN_CHECKBOX_LEFT_COLUMN)) {
        print getTitleFieldOfList($selectedfields, 0, $_SERVER["PHP_SELF"], '', '', '', '', $sortfield, $sortorder, 'center maxwidthsearch ')."\n";
    }
    foreach ($journalstatic->fields as $key => $val) {
        $cssforfield = (empty($val['csslist']) ? (empty($val['css']) ? '' : $val['css']) : $val['csslist']);
        if ($key == 'status') {
            $cssforfield .= ($cssforfield ? ' ' : '').'center';
        } elseif (in_array($val['type'], array('date', 'datetime', 'timestamp'))) {
            $cssforfield .= ($cssforfield ? ' ' : '').'center';
        } elseif (in_array($val['type'], array('timestamp'))) {
            $cssforfield .= ($cssforfield ? ' ' : '').'nowrap';
        } elseif (in_array($val['type'], array('double(24,8)', 'double(6,3)', 'integer', 'real', 'price')) && $key != 'rowid' && $val['label'] != 'TechnicalID' && empty($val['arrayofkeyval'])) {
            $cssforfield .= ($cssforfield ? ' ' : '').'right';
        }
        $cssforfield = preg_replace('/small\s*/', '', $cssforfield);	// the 'small' css must not be used for the title label
        if (!empty($arrayfields['t.'.$key]['checked'])) {
            print getTitleFieldOfList($arrayfields['t.'.$key]['label'], 0, $_SERVER['PHP_SELF'], 't.'.$key, '', $param, ($cssforfield ? 'class="'.$cssforfield.'"' : ''), $sortfield, $sortorder, ($cssforfield ? $cssforfield.' ' : ''))."\n";
            $fieldcount++;
        }
    }
    
    if (empty($conf->global->MAIN_CHECKBOX_LEFT_COLUMN)) {
        print getTitleFieldOfList($selectedfields, 0, $_SERVER["PHP_SELF"], '', '', '', '', $sortfield, $sortorder, 'center maxwidthsearch ')."\n";
    }
    $fieldcount++;
    print '</tr>'."\n";
 
    // Loop on record
    // --------------------------------------------------------------------
    $i = 0;
    $fieldcount = 0;
    $total_amount = 0;
    $imaxinloop = ($limit ? min($num, $limit) : $num);
    while ($i < $imaxinloop) {
        $obj = $db->fetch_object($resql);
        if (empty($obj)) {
            break; // Should not happen
        }

        // Store properties in $journalstatic
        $journalstatic->setVarsFromFetchObj($obj);
        // Show here line of result
        $j = 0;
        print '<tr data-rowid="'.$journalstatic->id.'" class="oddeven">';
        // Action column
        if (!empty($conf->global->MAIN_CHECKBOX_LEFT_COLUMN)) {
            print '<td class="nowrap center">';
            if ($massactionbutton || $massaction) { // If we are in select mode (massactionbutton defined) or if we have already selected and sent an action ($massaction) defined
                $selected = 0;
                if (in_array($journalstatic->id, $arrayofselected)) {
                    $selected = 1;
                }
                print '<input id="cb'.$journalstatic->id.'" class="flat checkforselect" type="checkbox" name="toselect[]" value="'.$journalstatic->id.'"'.($selected ? ' checked="checked"' : '').'>';
            }
            print '</td>';
        }
        foreach ($journalstatic->fields as $key => $val) {
            $cssforfield = (empty($val['csslist']) ? (empty($val['css']) ? '' : $val['css']) : $val['csslist']);
            if (in_array($val['type'], array('date', 'datetime', 'timestamp'))) {
                $cssforfield .= ($cssforfield ? ' ' : '').'center';
            } elseif ($key == 'status') {
                $cssforfield .= ($cssforfield ? ' ' : '').'center';
            }

            if (in_array($val['type'], array('timestamp'))) {
                $cssforfield .= ($cssforfield ? ' ' : '').'nowrap';
            } elseif ($key == 'ref') {
                $cssforfield .= ($cssforfield ? ' ' : '').'nowrap';
            }

            if (in_array($val['type'], array('double(24,8)', 'double(6,3)', 'integer', 'real', 'price')) && !in_array($key, array('rowid', 'status')) && empty($val['arrayofkeyval'])) {
                $cssforfield .= ($cssforfield ? ' ' : '').'right';
            }
            //if (in_array($key, array('fk_soc', 'fk_user', 'fk_warehouse'))) $cssforfield = 'tdoverflowmax100';

            if (!empty($arrayfields['t.'.$key]['checked'])) {
                print '<td'.($cssforfield ? ' class="'.$cssforfield.'"' : '');
                if (preg_match('/tdoverflow/', $cssforfield)) {
                    print ' title="'.dol_escape_htmltag($journalstatic->$key).'"';
                }
                print '>';
                if ($key == 'origin' && $obj->fk_linked_id) {
                    print $journalstatic->getOriginUrl();
                } else {
                    print $journalstatic->showOutputField($val, $key, $journalstatic->$key, '');
                }
                print '</td>';
                if (!$i) {
                    $fieldcount++;
                }
            }
        }
        if ($journalstatic->type == 1)
            $total_amount -= ($journalstatic->qty*$journalstatic->amount);
        else
            $total_amount += ($journalstatic->qty*$journalstatic->amount);

        // Action column
        if (empty($conf->global->MAIN_CHECKBOX_LEFT_COLUMN)) {
            print '<td class="nowrap center">';
            if ($massactionbutton || $massaction) { // If we are in select mode (massactionbutton defined) or if we have already selected and sent an action ($massaction) defined
                $selected = 0;
                if (in_array($journalstatic->id, $arrayofselected)) {
                    $selected = 1;
                }
                print '<input id="cb'.$journalstatic->id.'" class="flat checkforselect" type="checkbox" name="toselect[]" value="'.$journalstatic->id.'"'.($selected ? ' checked="checked"' : '').'>';
            }
            print '</td>';
        }
        if (!$i) {
            $fieldcount++;
        }

        print '</tr>'."\n";

        $i++;
    }

    // Show total line
    $fieldcount = $fieldcount - 2;
    print '<tr class="liste_total">';
    print '<td colspan="'.$fieldcount.'">'.$langs->trans("Total").'</td>';
    print '<td class="right">'. price($total_amount).'</td>';
    print '</tr>';
    //include DOL_DOCUMENT_ROOT.'/core/tpl/list_print_total.tpl.php';
    
    print '</table>'."\n";
    print '</div>'."\n";


    print '</form>'."\n";

    
    //print dol_get_fiche_end();
}

// End of page
llxFooter();
$db->close();
